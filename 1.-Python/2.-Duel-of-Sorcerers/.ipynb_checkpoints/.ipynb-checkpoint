{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gandals wins\n"
     ]
    }
   ],
   "source": [
    "gandalf = [10, 11, 13, 30, 22, 11, 10, 33, 22, 22]\n",
    "saruman = [23, 66, 12, 43, 12, 10, 44, 23, 12, 17]\n",
    "spells = []\n",
    "gandalf_wins=0\n",
    "saruman_wins=0\n",
    "for i in range(0,10):\n",
    "    spells.append(gandalf[i]-saruman[i])\n",
    "    if spells[i] > 0:\n",
    "        gandalf_wins+=1\n",
    "    elif spells[i] < 0:\n",
    "        saruman_wins+=1\n",
    "if gandalf_wins > saruman_wins:\n",
    "    print(\"gandals wins\")\n",
    "elif gandalf_wins < saruman_wins:\n",
    "    print(\"saruman_wins\")\n",
    "else:\n",
    "    print(\"Tie\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gandals wins\n",
      "[50, 40, 40, 10, 50, 10, 40, 50, 50, 50]\n",
      "39.0\n",
      "30.5\n",
      "la desviacion estandar de gandalf es 15.132745950421556\n",
      "la desviacion estandar de saruman es 17.7341478509682\n"
     ]
    }
   ],
   "source": [
    "POWER = {'Fireball': 50, 'Lightning bolt': 40, 'Magic arrow': 10, 'Black Tentacles': 25, 'Contagion': 45}\n",
    "gandalf = ['Fireball', 'Lightning bolt', 'Lightning bolt', 'Magic arrow', 'Fireball', 'Magic arrow', 'Lightning bolt', 'Fireball', 'Fireball', 'Fireball']\n",
    "saruman = ['Contagion', 'Contagion', 'Black Tentacles', 'Fireball', 'Black Tentacles', 'Lightning bolt', 'Magic arrow', 'Contagion', 'Magic arrow', 'Magic arrow']\n",
    "spells = []\n",
    "gandalf_wins=0\n",
    "saruman_wins=0\n",
    "gandalf_power=[]\n",
    "saruman_power=[]\n",
    "for i in range(0,10):\n",
    "    spells.append(POWER[gandalf[i]]-POWER[saruman[i]])\n",
    "    gandalf_power.append(POWER[gandalf[i]])\n",
    "    saruman_power.append(POWER[saruman[i]])\n",
    "    if spells[i] > 0:\n",
    "        gandalf_wins+=1\n",
    "    elif spells[i] < 0:\n",
    "        saruman_wins+=1   \n",
    "if gandalf_wins > saruman_wins:\n",
    "    print(\"gandals wins\")\n",
    "elif gandalf_wins < saruman_wins:\n",
    "    print(\"saruman_wins\")\n",
    "else:\n",
    "    print(\"Tie\")\n",
    "print(gandalf_power)\n",
    "x = sum(gandalf_power)/len(gandalf_power)\n",
    "y = sum(saruman_power)/len(saruman_power)\n",
    "print(x)\n",
    "print(y)\n",
    "\n",
    "import math\n",
    "g=0\n",
    "s=0\n",
    "for p in range (0,i+1):\n",
    "    g+=(gandalf_power[p]-x)**2\n",
    "    s+=(saruman_power [p]-x)**2\n",
    "g=g/len(gandalf_power)\n",
    "s=s/len(saruman_power)\n",
    "print(\"la desviacion estandar de gandalf es\",math.sqrt(g))\n",
    "print(\"la desviacion estandar de saruman es\",math.sqrt(s))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
